version: '3.8'

services:
  app:
    image: ghcr.io/linanok/linanok/web:latest
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - APP_NAME=Linanok
      - VITE_APP_NAME=Linanok
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  queue-worker:
    image: ghcr.io/linanok/linanok/queue:latest
    env_file:
      - .env
    environment:
      - APP_NAME=Linanok
      - VITE_APP_NAME=Linanok
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app
    deploy:
      replicas: ${QUEUE_WORKER_REPLICAS:-2}

  postgres:
    image: postgres:17-alpine
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d linanok" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app
    restart: unless-stopped

  redis:
    image: redis:8-alpine
    volumes:
      - redis-data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app
    restart: unless-stopped

volumes:
  postgres-data:
  redis-data:

networks:
  app:
    driver: bridge
    ipam:
      config:
        - subnet: ${TRUSTED_PROXIES}
